#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        win {
            bindings = <
&lt 1 ESC   &kp N1     &kp N2        &kp N3        &kp N4       &kp N5             &kp PAGE_UP    &kp N6       &kp N7       &kp N8       &kp N9              &kp N0               &kp GRAVE
&kp TAB     &kp Q      &kp W         &kp E         &kp R        &kp T              &kp PAGE_DOWN  &kp Y        &kp U        &kp I        &kp O               &kp P                &kp BACKSPACE
&kp LCTRL   &kp A      &kp S         &kp D         &kp F        &kp G              &kp HOME       &kp H        &kp J        &kp K        &kp L               &kp SEMI             &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V        &kp B              &kp END        &kp N        &kp M        &kp COMMA    &kp DOT             &kp FSLH             &kp DEL
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &lt 6 SPACE  &lt 5 BACKSLASH    &kp F1         &lt 6 ENTER  &lt 4 MINUS  &lt 5 EQUAL  &lt 6 LEFT_BRACKET  &lt 1 RIGHT_BRACKET
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "win";
        };

        win_c {
            bindings = <
&trans             &trans                 &trans               &trans  &trans  &trans    &trans  &trans          &trans          &trans        &trans           &trans  &trans
&trans             &kp LA(LEFT_ARROW)     &kp LA(RIGHT_ARROW)  &trans  &trans  &trans    &trans  &trans          &trans          &trans        &trans           &trans  &trans
&kp LC(PAGE_UP)    &kp LS(LC(PAGE_UP))    &trans               &trans  &trans  &trans    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&kp LC(PAGE_DOWN)  &kp LS(LC(PAGE_DOWN))  &trans               &trans  &trans  &trans    &trans  &trans          &trans          &trans        &trans           &trans  &to 2
&trans             &trans                 &trans               &trans  &trans  &trans    &trans  &trans          &trans          &trans        &trans           &trans
            >;

            display-name = "win_c";
            sensor-bindings = <&scroll_encoder>;
        };

        mac {
            display-name = "mac";
            bindings = <
&lt 3 ESC     &kp N1     &kp N2        &kp N3        &kp N4       &kp N5             &kp PAGE_UP    &kp N6       &kp N7       &kp N8       &kp N9              &kp N0               &kp GRAVE
&kp TAB       &kp Q      &kp W         &kp E         &kp R        &kp T              &kp PAGE_DOWN  &kp Y        &kp U        &kp I        &kp O               &kp P                &kp BACKSPACE
&kp LEFT_ALT  &kp A      &kp S         &kp D         &kp F        &kp G              &kp HOME       &kp H        &kp J        &kp K        &kp L               &kp SEMI             &kp APOS
&kp LSHFT     &kp Z      &kp X         &kp C         &kp V        &kp B              &kp END        &kp N        &kp M        &kp COMMA    &kp DOT             &kp FSLH             &kp DEL
&kp C_MUTE    &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &lt 6 SPACE  &lt 5 BACKSLASH    &kp F1         &lt 6 ENTER  &lt 4 MINUS  &lt 5 EQUAL  &lt 6 LEFT_BRACKET  &lt 3 RIGHT_BRACKET
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        mac_c {
            display-name = "mac_c";
            bindings = <
&trans             &trans                 &trans                 &trans  &trans  &trans    &trans  &trans          &trans          &trans        &trans           &trans  &trans
&trans             &kp LA(LEFT_BRACKET)   &kp LA(RIGHT_BRACKET)  &trans  &trans  &trans    &trans  &trans          &trans          &trans        &trans           &trans  &trans
&kp LC(PAGE_UP)    &kp LS(LC(PAGE_UP))    &trans                 &trans  &trans  &trans    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&kp LC(PAGE_DOWN)  &kp LS(LC(PAGE_DOWN))  &trans                 &trans  &trans  &trans    &trans  &trans          &trans          &trans        &trans           &trans  &to 0
&trans             &trans                 &trans                 &trans  &trans  &trans    &trans  &trans          &trans          &trans        &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        light {
            bindings = <
&trans      &trans           &trans          &trans           &trans           &trans             &trans  &trans           &trans           &trans        &trans     &trans  &trans
&trans      &trans           &trans          &trans           &trans           &trans             &trans  &trans           &trans           &trans        &trans     &trans  &trans
&trans      &trans           &trans          &trans           &trans           &trans             &trans  &kp LEFT         &kp DOWN         &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &trans  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans        &trans     &trans  &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &trans  &trans           &trans           &trans        &trans     &trans
            >;

            display-name = "lig";
            sensor-bindings = <&scroll_encoder>;
        };

        system {
            display-name = "sys";
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &trans          &trans          &trans        &trans           &out OUT_TOG  &trans
&trans  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans          &trans          &trans        &trans           &trans        &trans
&trans  &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans        &trans
&trans  &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans          &trans          &sys_reset    &soft_off        &bootloader   &trans
&trans  &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans          &trans          &trans        &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        func {
            bindings = <
&kp F1          &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &trans  &kp F7          &kp F8          &kp F9        &kp F10    &kp F11  &kp F12
&kp CAPSLOCK    &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans          &trans        &trans     &trans   &trans
&trans          &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans   &trans
&kp LEFT_SHIFT  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans          &trans        &trans     &trans   &trans
&trans          &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans          &trans        &trans     &trans
            >;

            label = "func";
        };
    };
};
